# CI for Xcode Builder

before_script:
  - uname -a
  - whoami
  - pwd
  - xcodebuild -list

build:
  tags:
    - iOS
  artifacts:
    paths:
      - artifacts/
  script:
    - SAFELOCATION=$(pwd) && echo $SAFELOCATION
    - rm -rf artifacts
    - mkdir artifacts    

    # SpringBoad Injector
    - cd $SAFELOCATION
    - cd SpringBoardInjector/DesktopLyricOverlay
    - rm -rf Packages/*
    - xcodebuild clean build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO" MonkeyDevInstallOnProfiling="NO" MonkeyDevInstallOnAnyBuild="NO" MonkeyDevCopyOnBuild="NO" MonkeyDevClearUiCacheOnInstall="NO" MonkeyDevBuildPackageOnAnyBuild="YES"
    - cp Packages/*.deb $SAFELOCATION/artifacts/

    # NMRoutine
    - cd $SAFELOCATION
    - cd NMRoutine/NeteaseMusicLyricProvider
    - rm -rf Packages/*
    - xcodebuild clean build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO" MonkeyDevInstallOnProfiling="NO" MonkeyDevInstallOnAnyBuild="NO" MonkeyDevCopyOnBuild="NO" MonkeyDevClearUiCacheOnInstall="NO" MonkeyDevBuildPackageOnAnyBuild="YES"
    - cp Packages/*.deb $SAFELOCATION/artifacts/

    # QMRoutine
    - cd $SAFELOCATION
    - cd QQMusicRoutine/QQMusicLyricsProvider
    - rm -rf Packages/*
    - xcodebuild clean build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO" MonkeyDevInstallOnProfiling="NO" MonkeyDevInstallOnAnyBuild="NO" MonkeyDevCopyOnBuild="NO" MonkeyDevClearUiCacheOnInstall="NO" MonkeyDevBuildPackageOnAnyBuild="YES"
    - cp Packages/*.deb $SAFELOCATION/artifacts/

    # CLEAN UP JOBS
    - cd $SAFELOCATION
    - ls -la artifacts
    - time

